<!-- sections/pickup-calendar.liquid -->
<!-- === ADD FLATPICKR CSS === -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" />
<div class="pickup-calendar">
  <h3>Choose Pickup Date & Time</h3>
 <label for="pickup-date">Pickup Date:</label><br>
                <!-- Changed type="date" to type="text" -->
                <input
                  type="text"
                  id="pickup-date"
                  name="attributes[Pickup Date]"
                  value="{{ cart.attributes['Pickup Date'] }}"
                  placeholder="Select pickup date"
                  required
                ><br><br>

                <label for="pickup-time">Pickup Time:</label><br>
                <input
                  type="time"
                  id="pickup-time"
                  name="attributes[Pickup Time]"
                  value="{{ cart.attributes['Pickup Time'] }}"
                  required
                >
          
</div>

{% schema %}
{
  "name": "Pickup Calendar",
  "settings": [
    {
      "type": "range",
      "id": "minimum_days_notice",
      "label": "Minimum days in advance",
      "min": 0,
      "max": 30,
      "default": 14
    }
  ],
  "presets": [
    {
      "name": "Pickup Calendar"
    }
  ]
}
{% endschema %}

<!-- ADD FLATPICKR JS BEFORE CLOSING BODY (outside all Liquid blocks) -->
<!-- Flatpickr CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" />

<!-- Flatpickr JS with defer -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr" defer></script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const minDays = {{ section.settings.minimum_days_notice | default: 14 }};
    const allowedDay = parseInt({{ section.settings.available_days | json }});
    const blackoutDates = {{ section.settings.blackout_dates | newline_to_br | split: '<br />' | json }};

    flatpickr('#pickup-date', {
      dateFormat: "Y-m-d",
      minDate: new Date().fp_incr(minDays),
      disable: [
        function (date) {
          return date.getDay() !== allowedDay || blackoutDates.includes(date.toISOString().split('T')[0]);
        }
      ]
    });
  });
</script>
